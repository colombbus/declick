image: alefesouza/php7-laravel-node-yarn

services:
  - mysql

variables:
  MYSQL_DATABASE: homestead
  MYSQL_ALLOW_EMPTY_PASSWORD: "true"
  DB_HOST: mysql
  DB_USERNAME: root
  DB_PASSWORD: ""

before_script:
  - npm i -g npm@latest

cache:
  paths:
    - node_modules/
    - packages/client/node_modules/
    - packages/objects/node_modules/
    # - packages/objects-phaser/node_modules/
    # - packages/offline/node_modules/
    - packages/runtime/node_modules/
    # - packages/server/vendor/

stages:
  - test
  - build
  - deploy

# unit_test:
#   stage: test
#   except:
#     - deploy
#   before_script:
#     - yarn
#   script:
#     - yarn run unit
#     # - composer start

# build_client:
#   stage: build
#   before_script:
#     - yarn global add lerna @vue/cli
#     - lerna exec "npm install"
#     - cd packages/objects
#     - npm install
#   script:
#     - cd packages/runtime
#     - yarn build

build_runtime:
  stage: build
  before_script:
    - npm i -g npm@latest
    - npm i -g yarn lerna
    - lerna bootstrap --use-workspaces
    # - lerna exec "npm install"
    # - cd packages/objects
    # - npm install
  script:
    - cd packages/runtime
    - yarn build
  artifacts:
    paths:
    - public


# deploy_QA:
#   stage: deploy
#   environment:
#     name: staging
#     url: "$QA_URL"
#   before_script:
#     - yarn build
#     - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
#     - eval $(ssh-agent -s)
#     - mkdir -p ~/.ssh
#     - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
#   script:
#     - ssh-add <(echo "$SSH_PRIVATE_KEY")
#     - ssh -o StrictHostKeyChecking=no user@"$QA_SERVER" rm -rf "$INSTALL_DIRECTORY"/*
#     - scp -P22 -r packages/ "$QA_USER"@"$QA_SERVER":"$INSTALL_DIRECTORY"
#   only:
#     - phaser
#
# deploy_production:
#   stage: deploy
#   environment:
#     name: production
#     url: $PRODUCTION_URL
#   only:
#     - master
#   script:
#     # Comment the following two lines if you can
#     # compile front-end stuff on your webserver,
#     # otherwise it will compile on GitLab CI and
#     # push it to a deploy branch, also remove the
#     # deploy branch on the Envoy.blade.php file
#     # - chmod +x ./build/deploy.sh
#     # - ./build/deploy.sh
#     # Run Envoy via composer to pull the changes on the deploy server
#     - composer run deploy
